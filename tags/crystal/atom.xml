<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>doomy - crystal</title>
    <subtitle>the world&#x27;s smallest web site, covered in rust</subtitle>
    <link rel="self" type="application/atom+xml" href="https://doomy.org/tags/crystal/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://doomy.org"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2016-10-15T01:00:00.007+00:00</updated>
    <id>https://doomy.org/tags/crystal/atom.xml</id>
    <entry xml:lang="en">
        <title>Redesigning crystal-lang.org</title>
        <published>2016-10-15T01:00:00.007+00:00</published>
        <updated>2016-10-15T01:00:00.007+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://doomy.org/redesigning-crystal-lang-org/"/>
        <id>https://doomy.org/redesigning-crystal-lang-org/</id>
        
        <content type="html" xml:base="https://doomy.org/redesigning-crystal-lang-org/">&lt;p&gt;The Crystal language&#x27;s current home at crystal-lang.org is a portal where beginners and developers alike will learn about the language and access various resources.  Although certainly usable and aesthetically interesting, Crystal&#x27;s website can be improved.&lt;&#x2F;p&gt;
&lt;p&gt;Let&#x27;s take a look at the website in it&#x27;s current state, and then discuss other project websites, and how we can learn from them.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Screenshots for this page will be pretty long, sorry!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;crystal-s-original-webpage-and-critiques&quot;&gt;Crystal&#x27;s original webpage and critiques&lt;&#x2F;h3&gt;
&lt;p&gt;Here&#x27;s a current copy of the webpage on archive.org, in case the website is changed in the future.&lt;&#x2F;p&gt;
&lt;p&gt;https:&#x2F;&#x2F;web.archive.org&#x2F;web&#x2F;20160820115808&#x2F;https:&#x2F;&#x2F;crystal-lang.org&#x2F;&lt;&#x2F;p&gt;
&lt;p&gt;Let&#x27;s take a look at what we can improve upon aesthetically and usability-wise.  Please note, I&#x27;m going to be focusing on stuff to improve.  There&#x27;s certainly good qualities about the website as it stands now, but I am giving a critique and a proposal, so positive remarks aren&#x27;t entirely helpful.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Hover over each point to see a brief comment.  After the image I provide more in-depth detail on my observations.&lt;&#x2F;p&gt;
&lt;img src=&quot;full-page.png&quot; class=&quot;jnote&quot; data-jnote=&#x27;[{&quot;x&quot;:0.248046875,&quot;y&quot;:0.18754532269760696,&quot;title&quot;:&quot;Hierarchy&quot;,&quot;caption&quot;:&quot;Low-contrast headers present readability issues, and do not capture the attention of the viewer.&quot;},{&quot;x&quot;:0.4970703125,&quot;y&quot;:0.3374123761179599,&quot;title&quot;:&quot;Grey gore&quot;,&quot;caption&quot;:&quot;It is very difficult to make grey icons on a half-grey background look good!&quot;},{&quot;x&quot;:0.2236328125,&quot;y&quot;:0.512901861252115,&quot;title&quot;:&quot;Repetition and Spacing&quot;,&quot;caption&quot;:&quot;Blog entries are super-spacy and do not have the same visual style as the rest of the site.&quot;},{&quot;x&quot;:0.12,&quot;y&quot;:0.12421440657481267,&quot;title&quot;:&quot;Contrast&quot;,&quot;caption&quot;:&quot;The site has gigantic black margins that create undesirable visual tension and focus the user away from content.&quot;},{&quot;x&quot;:0.15234375,&quot;y&quot;:0.01954919023446942,&quot;title&quot;:&quot;Not responsive&quot;,&quot;caption&quot;:&quot;The current website is not responsive, and does not appear well on mobile devices.&quot;},{&quot;x&quot;:0.552734375,&quot;y&quot;:0.6601099830795262,&quot;title&quot;:&quot;...and it keeps going&quot;,&quot;caption&quot;:&quot;Blog content takes up a huge amount of space for the little information it provides up front.&quot;}]&#x27; &#x2F;&gt;
&lt;h1 id=&quot;hierarchy&quot;&gt;Hierarchy&lt;&#x2F;h1&gt;
&lt;p&gt;The site suffers from poor hierarchy.  Very low-contrast headers present readability issues, and do not capture the attention of the viewer.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;doomy.org&#x2F;redesigning-crystal-lang-org&#x2F;Capture.PNG&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In this example, the &quot;How it looks&quot; header is completely skipped over in favor of it&#x27;s bolded, black content.  When scanning a webpage, most readers will completely skip the main form of organization on this page - headers - and jump straight into body copy.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;sponsors&quot;&gt;Sponsors&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;doomy.org&#x2F;redesigning-crystal-lang-org&#x2F;2.PNG&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Here, the &quot;Top Sponsors&quot; section is &lt;em&gt;huge&lt;&#x2F;em&gt; - bigger than all other content on the page.  Sponsors are incredibly important, but should not dominate content.  We can fix this in a couple ways - we can either make the sponsors section smaller (not good!) or we can find a way to separate the sponsors from content and give them their own place on the site (good!).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;doomy.org&#x2F;redesigning-crystal-lang-org&#x2F;the-verge.PNG&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;The Verge&lt;&#x2F;em&gt; gives us a more exaggerated example of this problem, with a gigantic advertisement across the top of the page.  Although important, what does this say about the website&#x27;s attitude towards the consumer?  UI should always feel like a friendly and respectful conversation.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;proportions&quot;&gt;Proportions&lt;&#x2F;h1&gt;
&lt;p&gt;Crystal&#x27;s website stays mostly consistent with typeface choices, allowing for a predicable and enjoyable rhythm.  However,  blog posts at the bottom of the site look out of place because of their huge margins, large text, and grey thumbnail boxes.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;doomy.org&#x2F;redesigning-crystal-lang-org&#x2F;proportions-1.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;color&quot;&gt;Color&lt;&#x2F;h1&gt;
&lt;p&gt;Of in design one will be told to never use pure black or white as it can be straining to read.  However, I believe that the pure black color is almost like a Crystal trademark.  If I think of Ruby, I think of red.  If I think of Python, I think of blue and yellow.&lt;&#x2F;p&gt;
&lt;p&gt;Crystal&#x27;s accent color is black, meaning it should be used only for emphasizing content.  However, the current website has gigantic black margins that create undesirable visual tension.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;doomy.org&#x2F;redesigning-crystal-lang-org&#x2F;visual.PNG&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Visual tension focused on the edges of the page, as opposed to the content&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Lowering the contrast of the background can immediately help resolve some issues without detracting from Crystal&#x27;s visual style.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;doomy.org&#x2F;redesigning-crystal-lang-org&#x2F;visual-2.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;While still not perfect, emphasis is now on the content&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;usability&quot;&gt;Usability&lt;&#x2F;h1&gt;
&lt;p&gt;Perhaps most detrimental, Crystal&#x27;s webpage is not easily accessed on mobile devices.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;doomy.org&#x2F;redesigning-crystal-lang-org&#x2F;usability.PNG&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is by no means an in-depth look at every element on Crystal&#x27;s homepage, but an overview on the biggest issues.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;learning-from-other-sites&quot;&gt;Learning from other sites&lt;&#x2F;h1&gt;
&lt;p&gt;Let&#x27;s take a look at other programming-based website homepages to see how they solve common problems.&lt;&#x2F;p&gt;
&lt;h5 id=&quot;ruby&quot;&gt;Ruby&lt;&#x2F;h5&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;doomy.org&#x2F;redesigning-crystal-lang-org&#x2F;ruby.PNG&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Aesthetically, Ruby&#x27;s homepage is not too impressive.  However, it has a strong visual hierarchy.  The first element visitors will see is the huge, red &quot;Download Ruby&quot; button.  We can assume from this that most users who come to Ruby&#x27;s webpage are there to install the language.  At the top of the page, we have links on everything Ruby programmers might want to know about spread out in a predictable and orthodox pattern.&lt;&#x2F;p&gt;
&lt;p&gt;Notice that Ruby also uses a red accent &lt;em&gt;sparingly&lt;&#x2F;em&gt; and &lt;em&gt;strategically&lt;&#x2F;em&gt; to highlight the most important information.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h5 id=&quot;swift&quot;&gt;Swift&lt;&#x2F;h5&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;doomy.org&#x2F;redesigning-crystal-lang-org&#x2F;apple.PNG&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Swift, being born out of Apple, has a different feel.  Swift is presented like a product, and language features are highlighted much to the same effect as a MacBook or iPad.  Although it&#x27;s easy to scoff (especially at Apple!) and assert that a programming language shouldn&#x27;t be treated like a shiny new Apple Watch, Apple&#x27;s methodology is part of the reason that Swift got popular so quickly.&lt;&#x2F;p&gt;
&lt;p&gt;In a sense, we are selling a product.  We are asking people to adopt Crystal or contribute to the project.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;ideas&quot;&gt;Ideas&lt;&#x2F;h1&gt;
&lt;p&gt;Crystal has a very unique aesthetic where pure black is an accent.  We can use this simplistic and clean style to create a very graphic feeling.&lt;&#x2F;p&gt;
&lt;p&gt;Here is an example style sheet for common elements.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;doomy.org&#x2F;redesigning-crystal-lang-org&#x2F;redesigns-02-3.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;page-examples&quot;&gt;Page Examples&lt;&#x2F;h3&gt;
&lt;p&gt;Consider right-clicking the image and opening it in a new tab to see it full resolution.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;doomy.org&#x2F;redesigning-crystal-lang-org&#x2F;rerere.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h4 id=&quot;more-to-come&quot;&gt;More to come:&lt;&#x2F;h4&gt;
&lt;p&gt;I still haven&#x27;t figured out what to do with blogs, but I think image banners with custom illustrations would looks really cool!  That does require some upkeep, though...&lt;&#x2F;p&gt;
&lt;p&gt;The design above is very much a first iteration and can use a lot of work.  But I think the essence of my idea is there, so I&#x27;ll keep progress updated.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;my-goal&quot;&gt;My Goal&lt;&#x2F;h1&gt;
&lt;p&gt;I would like to finalize these designs, and make a pull request someday to the Crystal website if they are interesting in a redesign of the site.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Building an authenticated web API wrapper with Crystal</title>
        <published>2016-09-20T01:00:00.007+00:00</published>
        <updated>2016-09-20T01:00:00.007+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://doomy.org/building-an-authenticated-web-api-wrapper-with-crystal/"/>
        <id>https://doomy.org/building-an-authenticated-web-api-wrapper-with-crystal/</id>
        
        <content type="html" xml:base="https://doomy.org/building-an-authenticated-web-api-wrapper-with-crystal/">&lt;p&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;crystal-lang.org&#x2F;&quot;&gt;Crystal&lt;&#x2F;a&gt; is an up-and-coming language very similar to Ruby, but compiled.  It&#x27;s still very young, and it&#x27;s changing all the time, but I&#x27;ve been having some fun playing around with it.  I started writing an &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;piedoom&#x2F;tumblr-crystal&quot;&gt;API wrapper for Tumblr&lt;&#x2F;a&gt; (which has basically become my &quot;Hello World&quot; now...).  Unfortunately, the documentation for some parts of Crystal doesn&#x27;t yet exist, so I learned a ton from the community.  Because there aren&#x27;t really any tutorials on how to do this sort of thing yet, I&#x27;d like to share what I&#x27;ve learned.&lt;&#x2F;p&gt;
&lt;p&gt;Big special thanks to &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;asterite&quot;&gt;Asterite&lt;&#x2F;a&gt; and the group &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;gitter.im&#x2F;crystal-lang&#x2F;crystal&quot;&gt;Gitter chat&lt;&#x2F;a&gt; for all of their help!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;preface&quot;&gt;Preface&lt;&#x2F;h3&gt;
&lt;p&gt;This tutorial is for beginner &#x2F; moderate skill level with programming.  If you know Ruby or even Python, you&#x27;ll find this super-easy.  If you&#x27;re stuck on something, send me a message and I&#x27;ll try to clear it up!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;installing&quot;&gt;Installing&lt;&#x2F;h3&gt;
&lt;p&gt;Because it&#x27;s very possible that you&#x27;ve just heard of Crystal for the first time, you&#x27;re probably going to need to install the library.  Detailed instructions on how to do this are available on the &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;crystal-lang.org&#x2F;docs&#x2F;installation&#x2F;index.html&quot;&gt;Crystal docs website.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: As of September 2016, Crystal does &lt;em&gt;not&lt;&#x2F;em&gt; have strategy for installing on Windows computers.  If you don&#x27;t have access to a *nix or MacOS machine, consider using a virtual machine.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;creating-a-crystal-project&quot;&gt;Creating a Crystal Project&lt;&#x2F;h3&gt;
&lt;p&gt;Once installed, it&#x27;s easy to create a new Crystal project.  Let&#x27;s create ours and name it &lt;code&gt;twitter-wrapper-test&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;cr&quot; class=&quot;language-cr z-code&quot;&gt;&lt;code class=&quot;language-cr&quot; data-lang=&quot;cr&quot;&gt;&lt;span class=&quot;z-source z-crystal&quot;&gt;crystal init &lt;span class=&quot;z-keyword z-control z-primary z-crystal&quot;&gt;lib&lt;&#x2F;span&gt; twitter&lt;span class=&quot;z-keyword z-operator z-arithmetic z-crystal&quot;&gt;-&lt;&#x2F;span&gt;wrapper&lt;span class=&quot;z-keyword z-operator z-arithmetic z-crystal&quot;&gt;-&lt;&#x2F;span&gt;test
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This will create a few files we&#x27;ll use to bootstrap our project for use with Shards.  Speaking of Shards... what are they?&lt;&#x2F;p&gt;
&lt;h3 id=&quot;getting-started-with-shards&quot;&gt;Getting Started with Shards&lt;&#x2F;h3&gt;
&lt;p&gt;Shards is Crystal&#x27;s dependency manager, similar to Rubygems, NPM, and NuGet.  Crystalshards is decentralized in a way, where adding a dependency is basically just adding a git URI.  As of now, however, almost all repositories are hosted on GitHub.  You can search them with &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;f&quot;&gt;Fatih Kadir Akın&#x27;s&lt;&#x2F;a&gt; excellent &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;http:&#x2F;&#x2F;crystalshards.xyz&#x2F;&quot;&gt;Crystalshards.xyz&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Let&#x27;s open up our &lt;code&gt;shard.yml&lt;&#x2F;code&gt; (which is similar to a Ruby project&#x27;s &lt;code&gt;Gemfile&lt;&#x2F;code&gt;).&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yml&quot; class=&quot;language-yml z-code&quot;&gt;&lt;code class=&quot;language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;name&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;twitter-wrapper-test&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;version&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-float z-decimal z-yaml&quot;&gt;0&lt;span class=&quot;z-punctuation z-separator z-decimal z-yaml&quot;&gt;.&lt;&#x2F;span&gt;1.0&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;authors&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-punctuation z-definition z-block z-sequence z-item z-yaml&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;doomy &amp;lt;myemail@email.com&amp;gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;license&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;MIT&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;When a project is created, it initializes some basic information like the license, authors, and version.  Change these to your liking.  For this project, we don&#x27;t need any dependencies.  Everything we need is built into the standard library!  (Awesome, right?)&lt;&#x2F;p&gt;
&lt;h3 id=&quot;getting-started-with-twitter&quot;&gt;Getting started with Twitter&lt;&#x2F;h3&gt;
&lt;p&gt;Although I&#x27;m using Twitter, feel free to follow along with another service as you see fit.  Keep in mind, however, that I&#x27;m using OAuth 1.0 in this tutorial.  You can use 2.0 with Crystal, but the process is a bit different.&lt;&#x2F;p&gt;
&lt;p&gt;Anyways, let&#x27;s create a new Twitter application.  Sign in or create your Twitter account, and then click &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;apps.twitter.com&#x2F;app&#x2F;new&quot;&gt;here&lt;&#x2F;a&gt; to generate a new app.  Don&#x27;t worry about the callback URL for now, we don&#x27;t need it.  Once that&#x27;s finished, go to your new application&#x27;s page, and click the &quot;Keys and Access Tokens&quot; tab.  At the bottom, click &quot;Create my access token&quot;.  Great!  This will create everything we need to test our API wrapper - a &lt;code&gt;Consumer Key&lt;&#x2F;code&gt;, &lt;code&gt;Consumer Secret&lt;&#x2F;code&gt;, &lt;code&gt;Access Token Secret&lt;&#x2F;code&gt;, and &lt;code&gt;Access Token&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;setting-up-some-environment-variables&quot;&gt;Setting up some environment variables&lt;&#x2F;h3&gt;
&lt;p&gt;These keys we&#x27;ve created are &lt;strong&gt;extremely&lt;&#x2F;strong&gt; sensitive and should be treated as you would a password.  This means that hardcoding them in our new Crystal application is a huge no-no.  Because we&#x27;re using a *nix system, we can set an environment variable.  Open up your shell&#x27;s &lt;code&gt;.rc&lt;&#x2F;code&gt; file (in most cases, &lt;code&gt;~&#x2F;.bashrc&lt;&#x2F;code&gt;) and append the following lines:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-shell&quot;&gt;export&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-shell&quot;&gt;TWITTER_CONSUMER_KEY&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;your-key-here&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-shell&quot;&gt;export&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-shell&quot;&gt;TWITTER_CONSUMER_SECRET&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;your-key-here&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-shell&quot;&gt;export&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-shell&quot;&gt;TWITTER_ACCESS_TOKEN&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;your-key-here&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-storage z-modifier z-shell&quot;&gt;export&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-assignment z-shell&quot;&gt;TWITTER_ACCESS_TOKEN_SECRET&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-shell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-unquoted z-shell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;your-key-here&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Where &lt;code&gt;your-key-here&lt;&#x2F;code&gt; is replaced with the corresponding value from your Twitter app.  Save and close your editor, and then open up a new terminal, or type &lt;code&gt;source ~&#x2F;.[your shell]rc&lt;&#x2F;code&gt; (most likely &lt;code&gt;source ~&#x2F;.bashrc&lt;&#x2F;code&gt;).&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Do we have to name our variables &lt;code&gt;TWITTER_CONSUMER_KEY&lt;&#x2F;code&gt;?&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;No, not really.  You can name these variables anything you like, but &lt;code&gt;TWITTER_CONSUMER_KEY&lt;&#x2F;code&gt; offers a lot of clarity!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;building-our-wrapper&quot;&gt;Building our wrapper&lt;&#x2F;h3&gt;
&lt;p&gt;Time to do some coding.  Open up our &lt;code&gt;src&#x2F;twitter-wrapper-test&#x2F;&lt;&#x2F;code&gt; directory, and create a new file called &lt;code&gt;client.cr&lt;&#x2F;code&gt;.  Before we write any code, let&#x27;s explain &lt;em&gt;how&lt;&#x2F;em&gt; and &lt;em&gt;why&lt;&#x2F;em&gt; we&#x27;re going to structure the project like we are.&lt;&#x2F;p&gt;
&lt;h5 id=&quot;static-classes-vs-instantiation&quot;&gt;Static Classes vs. Instantiation&lt;&#x2F;h5&gt;
&lt;p&gt;We&#x27;re going to instantiate the &lt;code&gt;client&lt;&#x2F;code&gt; class in order to perform requests.  Although we could definitely use a &lt;code&gt;static&lt;&#x2F;code&gt; class, it would have to be stateful and remember OAuth credentials.  Stateful static classes aren&#x27;t very clear when implemented, so we&#x27;re going to simply instatiate a new &lt;code&gt;client&lt;&#x2F;code&gt; object.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;setting-up-an-http-object-with-oauth&quot;&gt;Setting up an HTTP object with OAuth&lt;&#x2F;h3&gt;
&lt;p&gt;Crystal provides OAuth support in its standard library.  Neat!  Let&#x27;s open up our &lt;code&gt;client.cr&lt;&#x2F;code&gt; file and add a few &lt;code&gt;require&lt;&#x2F;code&gt; statements.  Let&#x27;s also make a &lt;code&gt;module&lt;&#x2F;code&gt; that&#x27;s the same name as our library.  (Notice that our &lt;code&gt;init&lt;&#x2F;code&gt; automatically created &lt;code&gt;Twitter::Wrapper::Test&lt;&#x2F;code&gt; because of the dashes.  This actually should probably be &lt;code&gt;TwitterWrapperTest&lt;&#x2F;code&gt;, so feel free to change all occurrences if you&#x27;d like.  For simplicity&#x27;s sake, I&#x27;ll just use what it generated).&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;ruby&quot; class=&quot;language-ruby z-code&quot;&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;&lt;span class=&quot;z-meta z-require z-ruby&quot;&gt;&lt;span class=&quot;z-keyword z-other z-special-method z-ruby&quot;&gt;require&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-ruby&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;oauth&lt;span class=&quot;z-punctuation z-definition z-string z-end z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;&lt;span class=&quot;z-meta z-require z-ruby&quot;&gt;&lt;span class=&quot;z-keyword z-other z-special-method z-ruby&quot;&gt;require&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-ruby&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;http&#x2F;client&lt;span class=&quot;z-punctuation z-definition z-string z-end z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;&lt;span class=&quot;z-meta z-require z-ruby&quot;&gt;&lt;span class=&quot;z-keyword z-other z-special-method z-ruby&quot;&gt;require&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-ruby&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;uri&lt;span class=&quot;z-punctuation z-definition z-string z-end z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;&lt;span class=&quot;z-meta z-module z-ruby&quot;&gt;&lt;span class=&quot;z-keyword z-control z-module z-ruby&quot;&gt;module&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-module z-ruby&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-module z-ruby&quot;&gt;&lt;span class=&quot;z-entity z-name z-module z-ruby&quot;&gt;&lt;span class=&quot;z-support z-other z-namespace z-ruby&quot;&gt;Twitter&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-ruby&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-other z-namespace z-ruby&quot;&gt;Wrapper&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-ruby&quot;&gt;::&lt;&#x2F;span&gt;Test&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;  
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;&lt;span class=&quot;z-keyword z-control z-ruby&quot;&gt;end&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Inside our module, we&#x27;re going to create a new client class, with an initialize.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;ruby&quot; class=&quot;language-ruby z-code&quot;&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;&lt;span class=&quot;z-meta z-class z-ruby&quot;&gt;&lt;span class=&quot;z-keyword z-control z-class z-ruby&quot;&gt;class&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-ruby&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-ruby&quot;&gt;&lt;span class=&quot;z-entity z-name z-class z-ruby&quot;&gt;Client&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-ruby&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;&lt;span class=&quot;z-meta z-class z-ruby&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;&lt;span class=&quot;z-meta z-class z-ruby&quot;&gt;  &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-constant z-ruby&quot;&gt;&lt;span class=&quot;z-entity z-name z-constant z-ruby&quot;&gt;Host&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-ruby&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-ruby&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;api.twitter.com&lt;span class=&quot;z-punctuation z-definition z-string z-end z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;  &lt;span class=&quot;z-comment z-line z-number-sign z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-ruby&quot;&gt;#&lt;&#x2F;span&gt; create a new client with oauth support
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;  &lt;span class=&quot;z-meta z-function z-ruby&quot;&gt;&lt;span class=&quot;z-keyword z-control z-def z-ruby&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-ruby&quot;&gt; &lt;span class=&quot;z-entity z-name z-function z-ruby&quot;&gt;initialize&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-begin z-ruby&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-ruby&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-ruby&quot;&gt;consumer_key&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-ruby&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-ruby&quot;&gt;consumer_secret&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-ruby&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-ruby&quot;&gt;oauth_token&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-ruby&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-ruby&quot;&gt;oauth_token_secret&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-end z-ruby&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;    &lt;span class=&quot;z-comment z-line z-number-sign z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-ruby&quot;&gt;#&lt;&#x2F;span&gt; create our OAuth consumer and token with the built in library!
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;    consumer &lt;span class=&quot;z-keyword z-operator z-assignment z-ruby&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-class z-ruby&quot;&gt;OAuth&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-ruby&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-ruby&quot;&gt;Consumer&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-ruby&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-other z-special-method z-ruby&quot;&gt;new&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-begin z-ruby&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-constant z-ruby&quot;&gt;Host&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-ruby&quot;&gt;,&lt;&#x2F;span&gt; consumer_key&lt;span class=&quot;z-punctuation z-separator z-sequence z-ruby&quot;&gt;,&lt;&#x2F;span&gt; consumer_secret&lt;span class=&quot;z-punctuation z-definition z-group z-end z-ruby&quot;&gt;)&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;    token &lt;span class=&quot;z-keyword z-operator z-assignment z-ruby&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-class z-ruby&quot;&gt;OAuth&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-ruby&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-ruby&quot;&gt;AccessToken&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-ruby&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-other z-special-method z-ruby&quot;&gt;new&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-begin z-ruby&quot;&gt;(&lt;&#x2F;span&gt;oauth_token&lt;span class=&quot;z-punctuation z-separator z-sequence z-ruby&quot;&gt;,&lt;&#x2F;span&gt; oauth_token_secret&lt;span class=&quot;z-punctuation z-definition z-group z-end z-ruby&quot;&gt;)&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;    &lt;span class=&quot;z-comment z-line z-number-sign z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-ruby&quot;&gt;#&lt;&#x2F;span&gt; create an instance of the HTTP client using HTTPS
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;    &lt;span class=&quot;z-variable z-other z-readwrite z-instance z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-ruby&quot;&gt;@&lt;&#x2F;span&gt;http_client&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-ruby&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-class z-ruby&quot;&gt;HTTP&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-ruby&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-ruby&quot;&gt;Client&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-ruby&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-other z-special-method z-ruby&quot;&gt;new&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-begin z-ruby&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-constant z-ruby&quot;&gt;Host&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-ruby&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-other z-symbol z-ruby&quot;&gt;tls&lt;span class=&quot;z-punctuation z-definition z-constant z-ruby&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-language z-ruby&quot;&gt;true&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-ruby&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-other z-symbol z-ruby&quot;&gt;port&lt;span class=&quot;z-punctuation z-definition z-constant z-ruby&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-ruby&quot;&gt;443&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-end z-ruby&quot;&gt;)&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;    &lt;span class=&quot;z-comment z-line z-number-sign z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-ruby&quot;&gt;#&lt;&#x2F;span&gt; use the `authenticate` method on our consumer variable to authenticate our HTTP client with each request.  Neat!
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;    consumer&lt;span class=&quot;z-punctuation z-accessor z-dot z-ruby&quot;&gt;.&lt;&#x2F;span&gt;authenticate&lt;span class=&quot;z-punctuation z-definition z-group z-begin z-ruby&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-instance z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-ruby&quot;&gt;@&lt;&#x2F;span&gt;http_client&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-ruby&quot;&gt;,&lt;&#x2F;span&gt; token&lt;span class=&quot;z-punctuation z-definition z-group z-end z-ruby&quot;&gt;)&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;  &lt;span class=&quot;z-keyword z-control z-ruby&quot;&gt;end&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;&lt;span class=&quot;z-keyword z-control z-ruby&quot;&gt;end&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And that&#x27;s just about it!  One of the most painless OAuth implementations in history :)&lt;&#x2F;p&gt;
&lt;h3 id=&quot;getting-information-from-an-endpoint&quot;&gt;Getting information from an endpoint&lt;&#x2F;h3&gt;
&lt;p&gt;Twitter provides multiple endpoints for fetching JSON data.  For this tutorial, we&#x27;re just going to search for some tweets.  You can read more about it&#x27;s specification &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;dev.twitter.com&#x2F;rest&#x2F;reference&#x2F;get&#x2F;search&#x2F;tweets&quot;&gt;here&lt;&#x2F;a&gt;.  Twitter provides some awesome API docs.&lt;&#x2F;p&gt;
&lt;p&gt;In our client, let&#x27;s add a new method called &lt;code&gt;tweet_search&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;ruby&quot; class=&quot;language-ruby z-code&quot;&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;&lt;span class=&quot;z-meta z-function z-ruby&quot;&gt;&lt;span class=&quot;z-keyword z-control z-def z-ruby&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-ruby&quot;&gt; &lt;span class=&quot;z-entity z-name z-function z-ruby&quot;&gt;tweet_search&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-begin z-ruby&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-ruby&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-ruby&quot;&gt;query&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-default-value z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-ruby&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-default-value z-ruby&quot;&gt; &lt;span class=&quot;z-support z-function z-builtin z-ruby&quot;&gt;String&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-end z-ruby&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;  response &lt;span class=&quot;z-keyword z-operator z-assignment z-ruby&quot;&gt;=&lt;&#x2F;span&gt; get&lt;span class=&quot;z-punctuation z-definition z-group z-begin z-ruby&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-ruby&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&#x2F;1.1&#x2F;search&#x2F;tweets.json&lt;span class=&quot;z-punctuation z-definition z-string z-end z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-ruby&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-section z-scope z-ruby&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-ruby&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;q&lt;span class=&quot;z-punctuation z-definition z-string z-end z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-separator z-key-value z-ruby&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; query&lt;span class=&quot;z-punctuation z-section z-scope z-ruby&quot;&gt;}&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-end z-ruby&quot;&gt;)&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;&lt;span class=&quot;z-keyword z-control z-ruby&quot;&gt;end&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Simple enough, right?  Well, if we tried to run this right now, we&#x27;d get a compiler error because our &lt;code&gt;get&lt;&#x2F;code&gt; method doesn&#x27;t yet exist.  Let&#x27;s create that, and a few other useful methods in our client class.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;ruby&quot; class=&quot;language-ruby z-code&quot;&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-ruby&quot;&gt;#&lt;&#x2F;span&gt; generic function for getting JSON
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;&lt;span class=&quot;z-keyword z-other z-special-method z-ruby&quot;&gt;private&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function z-ruby&quot;&gt;&lt;span class=&quot;z-keyword z-control z-def z-ruby&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-ruby&quot;&gt; &lt;span class=&quot;z-entity z-name z-function z-ruby&quot;&gt;get&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-begin z-ruby&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-ruby&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-ruby&quot;&gt;path&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-default-value z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-ruby&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-default-value z-ruby&quot;&gt; &lt;span class=&quot;z-support z-function z-builtin z-ruby&quot;&gt;String&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-ruby&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-ruby&quot;&gt;params&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-default-value z-ruby&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-ruby&quot;&gt;=&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-default-value z-ruby&quot;&gt; &lt;span class=&quot;z-punctuation z-section z-scope z-ruby&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-scope z-ruby&quot;&gt;}&lt;&#x2F;span&gt; of &lt;span class=&quot;z-support z-function z-builtin z-ruby&quot;&gt;String&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-separator z-key-value z-ruby&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-builtin z-ruby&quot;&gt;String&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-end z-ruby&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;  &lt;span class=&quot;z-comment z-line z-number-sign z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-ruby&quot;&gt;#&lt;&#x2F;span&gt; add parameters to our string
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;  path &lt;span class=&quot;z-keyword z-operator z-assignment z-augmented z-ruby&quot;&gt;+=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-ruby&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;?&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-interpolation z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-interpolation z-begin z-ruby&quot;&gt;#{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-interpolation z-ruby&quot;&gt;&lt;span class=&quot;z-source z-ruby z-embedded z-ruby&quot;&gt;to_query_params&lt;span class=&quot;z-punctuation z-definition z-group z-begin z-ruby&quot;&gt;(&lt;&#x2F;span&gt;params&lt;span class=&quot;z-punctuation z-definition z-group z-end z-ruby&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-interpolation z-end z-ruby&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;  &lt;span class=&quot;z-keyword z-control z-ruby&quot;&gt;unless&lt;&#x2F;span&gt; params&lt;span class=&quot;z-punctuation z-accessor z-dot z-ruby&quot;&gt;.&lt;&#x2F;span&gt;empty?
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;  &lt;span class=&quot;z-comment z-line z-number-sign z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-ruby&quot;&gt;#&lt;&#x2F;span&gt; finally, get our response
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;  response &lt;span class=&quot;z-keyword z-operator z-assignment z-ruby&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-instance z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-ruby&quot;&gt;@&lt;&#x2F;span&gt;http_client&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-ruby&quot;&gt;.&lt;&#x2F;span&gt;get&lt;span class=&quot;z-punctuation z-definition z-group z-begin z-ruby&quot;&gt;(&lt;&#x2F;span&gt;path&lt;span class=&quot;z-punctuation z-definition z-group z-end z-ruby&quot;&gt;)&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;  &lt;span class=&quot;z-comment z-line z-number-sign z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-ruby&quot;&gt;#&lt;&#x2F;span&gt; handle the response properly and check for errors
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;  handle_response&lt;span class=&quot;z-punctuation z-definition z-group z-begin z-ruby&quot;&gt;(&lt;&#x2F;span&gt;response&lt;span class=&quot;z-punctuation z-definition z-group z-end z-ruby&quot;&gt;)&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;&lt;span class=&quot;z-keyword z-control z-ruby&quot;&gt;end&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;&lt;span class=&quot;z-keyword z-other z-special-method z-ruby&quot;&gt;private&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function z-ruby&quot;&gt;&lt;span class=&quot;z-keyword z-control z-def z-ruby&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-ruby&quot;&gt; &lt;span class=&quot;z-entity z-name z-function z-ruby&quot;&gt;handle_response&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-begin z-ruby&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-ruby&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-ruby&quot;&gt;response&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-default-value z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-ruby&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-default-value z-ruby&quot;&gt; &lt;span class=&quot;z-support z-class z-ruby&quot;&gt;HTTP&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-ruby&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-ruby&quot;&gt;Client&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-ruby&quot;&gt;::&lt;&#x2F;span&gt;Response&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-end z-ruby&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;  &lt;span class=&quot;z-keyword z-control z-ruby&quot;&gt;case&lt;&#x2F;span&gt; response&lt;span class=&quot;z-punctuation z-accessor z-dot z-ruby&quot;&gt;.&lt;&#x2F;span&gt;status_code
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;  &lt;span class=&quot;z-keyword z-control z-ruby&quot;&gt;when&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-ruby&quot;&gt;200&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-range z-ruby&quot;&gt;..&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-ruby&quot;&gt;299&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;    response&lt;span class=&quot;z-punctuation z-accessor z-dot z-ruby&quot;&gt;.&lt;&#x2F;span&gt;body
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;  &lt;span class=&quot;z-keyword z-control z-ruby&quot;&gt;else&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;    &lt;span class=&quot;z-keyword z-other z-special-method z-ruby&quot;&gt;raise&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-ruby&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-interpolation z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-interpolation z-begin z-ruby&quot;&gt;#{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-interpolation z-ruby&quot;&gt;&lt;span class=&quot;z-source z-ruby z-embedded z-ruby&quot;&gt;response&lt;span class=&quot;z-punctuation z-accessor z-dot z-ruby&quot;&gt;.&lt;&#x2F;span&gt;status_code&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-interpolation z-end z-ruby&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-ruby&quot;&gt; - &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-interpolation z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-interpolation z-begin z-ruby&quot;&gt;#{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-interpolation z-ruby&quot;&gt;&lt;span class=&quot;z-source z-ruby z-embedded z-ruby&quot;&gt;response&lt;span class=&quot;z-punctuation z-accessor z-dot z-ruby&quot;&gt;.&lt;&#x2F;span&gt;body&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-interpolation z-end z-ruby&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;  &lt;span class=&quot;z-keyword z-control z-ruby&quot;&gt;end&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;&lt;span class=&quot;z-keyword z-control z-ruby&quot;&gt;end&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-ruby&quot;&gt;#&lt;&#x2F;span&gt; returns a URL encoded string used for query parameters
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;&lt;span class=&quot;z-keyword z-other z-special-method z-ruby&quot;&gt;private&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function z-ruby&quot;&gt;&lt;span class=&quot;z-keyword z-control z-def z-ruby&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-ruby&quot;&gt; &lt;span class=&quot;z-entity z-name z-function z-ruby&quot;&gt;to_query_params&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-begin z-ruby&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-ruby&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-ruby&quot;&gt;params&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-default-value z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-ruby&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-default-value z-ruby&quot;&gt; &lt;span class=&quot;z-support z-function z-builtin z-ruby&quot;&gt;Hash&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-begin z-ruby&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-builtin z-ruby&quot;&gt;String&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-ruby&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-builtin z-ruby&quot;&gt;String&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-end z-ruby&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-end z-ruby&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;  &lt;span class=&quot;z-support z-class z-ruby&quot;&gt;HTTP&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-ruby&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-ruby&quot;&gt;Params&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-ruby&quot;&gt;.&lt;&#x2F;span&gt;build &lt;span class=&quot;z-keyword z-control z-start-block z-ruby&quot;&gt;do&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-parameters z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameters z-begin z-ruby&quot;&gt;|&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-parameters z-ruby&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-ruby&quot;&gt;form_builder&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-parameters z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameters z-end z-ruby&quot;&gt;|&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;    params&lt;span class=&quot;z-punctuation z-accessor z-dot z-ruby&quot;&gt;.&lt;&#x2F;span&gt;each &lt;span class=&quot;z-keyword z-control z-start-block z-ruby&quot;&gt;do&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-parameters z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameters z-begin z-ruby&quot;&gt;|&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-parameters z-ruby&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-ruby&quot;&gt;key&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-ruby&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-ruby&quot;&gt;value&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-parameters z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameters z-end z-ruby&quot;&gt;|&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;      form_builder&lt;span class=&quot;z-punctuation z-accessor z-dot z-ruby&quot;&gt;.&lt;&#x2F;span&gt;add&lt;span class=&quot;z-punctuation z-definition z-group z-begin z-ruby&quot;&gt;(&lt;&#x2F;span&gt;key&lt;span class=&quot;z-punctuation z-separator z-sequence z-ruby&quot;&gt;,&lt;&#x2F;span&gt; value&lt;span class=&quot;z-punctuation z-definition z-group z-end z-ruby&quot;&gt;)&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;    &lt;span class=&quot;z-keyword z-control z-ruby&quot;&gt;end&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;  &lt;span class=&quot;z-keyword z-control z-ruby&quot;&gt;end&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;&lt;span class=&quot;z-keyword z-control z-ruby&quot;&gt;end&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;These methods are pretty self explanatory.  I also have to admit, I almost entirely ripped these from &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sferik&#x2F;twitter-crystal&#x2F;blob&#x2F;master&#x2F;src&#x2F;twitter&#x2F;rest&#x2F;client.cr&quot;&gt;sferik&#x27;s source code&lt;&#x2F;a&gt;. There&#x27;s some great examples in that repo if you like reading source.  Unfortunately, there&#x27;s no documentation for it yet :(&lt;&#x2F;p&gt;
&lt;h3 id=&quot;testing&quot;&gt;Testing&lt;&#x2F;h3&gt;
&lt;p&gt;Now that we have everything we need to make a simple request, let&#x27;s see if our library works.&lt;&#x2F;p&gt;
&lt;p&gt;Open up &lt;code&gt;src&#x2F;twitter-wrapper-test.cr&lt;&#x2F;code&gt;.  Let&#x27;s write some code in the module block.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: Usually, you&#x27;re NEVER going to want to write app-specific code inside of a &lt;code&gt;lib&lt;&#x2F;code&gt; package.  Currently, there is no REPL in Crystal, so projects can&#x27;t really be tested without making another Crystal application that consumes your custom library.  In order to avoid doing this for simplicity sake, we can write stuff directly in our &lt;code&gt;twitter-wrapper-test.cr&lt;&#x2F;code&gt; file.  Just remember to delete it before sharing!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;pre data-lang=&quot;rb&quot; class=&quot;language-rb z-code&quot;&gt;&lt;code class=&quot;language-rb&quot; data-lang=&quot;rb&quot;&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;client &lt;span class=&quot;z-keyword z-operator z-assignment z-ruby&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-class z-ruby&quot;&gt;Client&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-ruby&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-other z-special-method z-ruby&quot;&gt;new&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-begin z-ruby&quot;&gt;(&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;    &lt;span class=&quot;z-meta z-environment-variable z-ruby&quot;&gt;&lt;span class=&quot;z-variable z-other z-constant z-ruby&quot;&gt;ENV&lt;&#x2F;span&gt;[&lt;span class=&quot;z-meta z-string z-ruby&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;TWITTER_CONSUMER_KEY&lt;span class=&quot;z-punctuation z-definition z-string z-end z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;]&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-ruby&quot;&gt;,&lt;&#x2F;span&gt; 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;    &lt;span class=&quot;z-meta z-environment-variable z-ruby&quot;&gt;&lt;span class=&quot;z-variable z-other z-constant z-ruby&quot;&gt;ENV&lt;&#x2F;span&gt;[&lt;span class=&quot;z-meta z-string z-ruby&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;TWITTER_CONSUMER_SECRET&lt;span class=&quot;z-punctuation z-definition z-string z-end z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;]&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-ruby&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;    &lt;span class=&quot;z-meta z-environment-variable z-ruby&quot;&gt;&lt;span class=&quot;z-variable z-other z-constant z-ruby&quot;&gt;ENV&lt;&#x2F;span&gt;[&lt;span class=&quot;z-meta z-string z-ruby&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;TWITTER_ACCESS_TOKEN&lt;span class=&quot;z-punctuation z-definition z-string z-end z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;]&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-ruby&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;    &lt;span class=&quot;z-meta z-environment-variable z-ruby&quot;&gt;&lt;span class=&quot;z-variable z-other z-constant z-ruby&quot;&gt;ENV&lt;&#x2F;span&gt;[&lt;span class=&quot;z-meta z-string z-ruby&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;TWITTER_ACCESS_TOKEN_SECRET&lt;span class=&quot;z-punctuation z-definition z-string z-end z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;]&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-end z-ruby&quot;&gt;)&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-ruby&quot;&gt;puts&lt;&#x2F;span&gt; client&lt;span class=&quot;z-punctuation z-accessor z-dot z-ruby&quot;&gt;.&lt;&#x2F;span&gt;tweet_search&lt;span class=&quot;z-punctuation z-definition z-group z-begin z-ruby&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-ruby&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;@crystal-lang&lt;span class=&quot;z-punctuation z-definition z-string z-end z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-end z-ruby&quot;&gt;)&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Basically, we&#x27;re creating a new client with our OAuth environment variables, and then searching for tweets with the string &quot;@crystal-lang&quot;.  Let&#x27;s test our application.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;crystal src&#x2F;twitter-wrapper-test.cr&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;If all goes to plan, we should get a huge strin of JSON.  This means our API authentication is working properly.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;deseralizing-json-with-crystal&quot;&gt;Deseralizing JSON with Crystal&lt;&#x2F;h3&gt;
&lt;p&gt;Crystal provides some awesome, magical ways to deseralize JSON easily.  So let&#x27;s get started!  Create a new file, &lt;code&gt;src&#x2F;twitter-wrapper-test&#x2F;tweet.cr&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;We need to deserialize JSON that looks like &lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;dev.twitter.com&#x2F;rest&#x2F;reference&#x2F;get&#x2F;search&#x2F;tweets&quot;&gt;this&lt;&#x2F;a&gt; (scroll down to the bottom for JSON examples).  There&#x27;s a LOT of different properties for each tweet.  Let&#x27;s just keep it basic and parse the &lt;code&gt;text&lt;&#x2F;code&gt;, &lt;code&gt;id&lt;&#x2F;code&gt;, and &lt;code&gt;user&lt;&#x2F;code&gt; properties.&lt;&#x2F;p&gt;
&lt;p&gt;In our &lt;code&gt;tweet.cr&lt;&#x2F;code&gt;...&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;ruby&quot; class=&quot;language-ruby z-code&quot;&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;&lt;span class=&quot;z-meta z-require z-ruby&quot;&gt;&lt;span class=&quot;z-keyword z-other z-special-method z-ruby&quot;&gt;require&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-ruby&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;json&lt;span class=&quot;z-punctuation z-definition z-string z-end z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;&lt;span class=&quot;z-meta z-module z-ruby&quot;&gt;&lt;span class=&quot;z-keyword z-control z-module z-ruby&quot;&gt;module&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-module z-ruby&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-module z-ruby&quot;&gt;&lt;span class=&quot;z-entity z-name z-module z-ruby&quot;&gt;&lt;span class=&quot;z-support z-other z-namespace z-ruby&quot;&gt;Twitter&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-ruby&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-other z-namespace z-ruby&quot;&gt;Wrapper&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-ruby&quot;&gt;::&lt;&#x2F;span&gt;Test&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;  &lt;span class=&quot;z-meta z-class z-ruby&quot;&gt;&lt;span class=&quot;z-keyword z-control z-class z-ruby&quot;&gt;class&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-ruby&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-ruby&quot;&gt;&lt;span class=&quot;z-entity z-name z-class z-ruby&quot;&gt;Tweet&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-ruby&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;&lt;span class=&quot;z-meta z-class z-ruby&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-ruby&quot;&gt;JSON&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-ruby&quot;&gt;.&lt;&#x2F;span&gt;mapping&lt;span class=&quot;z-punctuation z-definition z-group z-begin z-ruby&quot;&gt;(&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;      &lt;span class=&quot;z-constant z-other z-symbol z-ruby&quot;&gt;text&lt;span class=&quot;z-punctuation z-definition z-constant z-ruby&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-section z-scope z-ruby&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-other z-symbol z-ruby&quot;&gt;type&lt;span class=&quot;z-punctuation z-definition z-constant z-ruby&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-builtin z-ruby&quot;&gt;String&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-scope z-ruby&quot;&gt;}&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-ruby&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;      &lt;span class=&quot;z-constant z-other z-symbol z-ruby&quot;&gt;id&lt;span class=&quot;z-punctuation z-definition z-constant z-ruby&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-section z-scope z-ruby&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-other z-symbol z-ruby&quot;&gt;type&lt;span class=&quot;z-punctuation z-definition z-constant z-ruby&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-constant z-ruby&quot;&gt;Int64&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-scope z-ruby&quot;&gt;}&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-ruby&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;      &lt;span class=&quot;z-constant z-other z-symbol z-ruby&quot;&gt;user&lt;span class=&quot;z-punctuation z-definition z-constant z-ruby&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-section z-scope z-ruby&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-other z-symbol z-ruby&quot;&gt;type&lt;span class=&quot;z-punctuation z-definition z-constant z-ruby&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-constant z-ruby&quot;&gt;User&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-scope z-ruby&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;    &lt;span class=&quot;z-punctuation z-definition z-group z-end z-ruby&quot;&gt;)&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;  &lt;span class=&quot;z-keyword z-control z-ruby&quot;&gt;end&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;&lt;span class=&quot;z-keyword z-control z-ruby&quot;&gt;end&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The &lt;code&gt;JSON.mapping&lt;&#x2F;code&gt; macro is an easy way for Crystal to figure out what properties of an object will be accessible, and how to deserialize&#x2F;serialize the object to and from JSON.&lt;&#x2F;p&gt;
&lt;p&gt;You might notice that our &lt;code&gt;user&lt;&#x2F;code&gt; property has a type that isn&#x27;t already defined.  We need to make a new &lt;code&gt;User&lt;&#x2F;code&gt; class.  Create a new file as &lt;code&gt;src&#x2F;twitter-wrapper-test&#x2F;user.cr&lt;&#x2F;code&gt;. Again, there&#x27;s a ton of properties given to us over JSON, so let&#x27;s just take a few - &lt;code&gt;id&lt;&#x2F;code&gt;, &lt;code&gt;description&lt;&#x2F;code&gt;, and &lt;code&gt;screen_name&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;In our &lt;code&gt;user.cr&lt;&#x2F;code&gt;...&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;ruby&quot; class=&quot;language-ruby z-code&quot;&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;&lt;span class=&quot;z-meta z-require z-ruby&quot;&gt;&lt;span class=&quot;z-keyword z-other z-special-method z-ruby&quot;&gt;require&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-ruby&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;json&lt;span class=&quot;z-punctuation z-definition z-string z-end z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;&lt;span class=&quot;z-meta z-module z-ruby&quot;&gt;&lt;span class=&quot;z-keyword z-control z-module z-ruby&quot;&gt;module&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-module z-ruby&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-module z-ruby&quot;&gt;&lt;span class=&quot;z-entity z-name z-module z-ruby&quot;&gt;&lt;span class=&quot;z-support z-other z-namespace z-ruby&quot;&gt;Twitter&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-ruby&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-other z-namespace z-ruby&quot;&gt;Wrapper&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-double-colon z-ruby&quot;&gt;::&lt;&#x2F;span&gt;Test&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;  &lt;span class=&quot;z-meta z-class z-ruby&quot;&gt;&lt;span class=&quot;z-keyword z-control z-class z-ruby&quot;&gt;class&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-ruby&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-ruby&quot;&gt;&lt;span class=&quot;z-entity z-name z-class z-ruby&quot;&gt;User&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-class z-ruby&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;&lt;span class=&quot;z-meta z-class z-ruby&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-class z-ruby&quot;&gt;JSON&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-ruby&quot;&gt;.&lt;&#x2F;span&gt;mapping&lt;span class=&quot;z-punctuation z-definition z-group z-begin z-ruby&quot;&gt;(&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;      &lt;span class=&quot;z-constant z-other z-symbol z-ruby&quot;&gt;description&lt;span class=&quot;z-punctuation z-definition z-constant z-ruby&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-section z-scope z-ruby&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-other z-symbol z-ruby&quot;&gt;type&lt;span class=&quot;z-punctuation z-definition z-constant z-ruby&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-builtin z-ruby&quot;&gt;String&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-scope z-ruby&quot;&gt;}&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-ruby&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;      &lt;span class=&quot;z-constant z-other z-symbol z-ruby&quot;&gt;name&lt;span class=&quot;z-punctuation z-definition z-constant z-ruby&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-section z-scope z-ruby&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-other z-symbol z-ruby&quot;&gt;type&lt;span class=&quot;z-punctuation z-definition z-constant z-ruby&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-builtin z-ruby&quot;&gt;String&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-ruby&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-other z-symbol z-ruby&quot;&gt;key&lt;span class=&quot;z-punctuation z-definition z-constant z-ruby&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-ruby&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;screen_name&lt;span class=&quot;z-punctuation z-definition z-string z-end z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-scope z-ruby&quot;&gt;}&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-sequence z-ruby&quot;&gt;,&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;      &lt;span class=&quot;z-constant z-other z-symbol z-ruby&quot;&gt;id&lt;span class=&quot;z-punctuation z-definition z-constant z-ruby&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-section z-scope z-ruby&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-other z-symbol z-ruby&quot;&gt;type&lt;span class=&quot;z-punctuation z-definition z-constant z-ruby&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-constant z-ruby&quot;&gt;Int64&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-scope z-ruby&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;    &lt;span class=&quot;z-punctuation z-definition z-group z-end z-ruby&quot;&gt;)&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;  &lt;span class=&quot;z-keyword z-control z-ruby&quot;&gt;end&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;&lt;span class=&quot;z-keyword z-control z-ruby&quot;&gt;end&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;For our &lt;code&gt;name&lt;&#x2F;code&gt; property, I passed in a &lt;code&gt;key&lt;&#x2F;code&gt; parameter with the value of &quot;screen_name&quot;.  You can use this whenever your property name doesn&#x27;t match up with the JSON&lt;&#x2F;p&gt;
&lt;h3 id=&quot;finishing-up&quot;&gt;Finishing Up&lt;&#x2F;h3&gt;
&lt;p&gt;Let&#x27;s reopen our &lt;code&gt;client.cr&lt;&#x2F;code&gt; file so we can use our new JSON enabled classes.  At the end of our &lt;code&gt;tweet_search&lt;&#x2F;code&gt; method, add the following:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;ruby&quot; class=&quot;language-ruby z-code&quot;&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;&lt;span class=&quot;z-keyword z-control z-pseudo-method z-ruby&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-builtin z-ruby&quot;&gt;Array&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-begin z-ruby&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-constant z-ruby&quot;&gt;Tweet&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-end z-ruby&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-ruby&quot;&gt;.&lt;&#x2F;span&gt;from_json&lt;span class=&quot;z-punctuation z-definition z-group z-begin z-ruby&quot;&gt;(&lt;&#x2F;span&gt;response&lt;span class=&quot;z-punctuation z-separator z-sequence z-ruby&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-other z-symbol z-ruby&quot;&gt;root&lt;span class=&quot;z-punctuation z-definition z-constant z-ruby&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-ruby&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;statuses&lt;span class=&quot;z-punctuation z-definition z-string z-end z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-end z-ruby&quot;&gt;)&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This will tell Crystal to use our JSON mappings to get an Array of Tweet objects in the root &quot;statuses&quot; (as defined in our JSON).&lt;&#x2F;p&gt;
&lt;p&gt;Let&#x27;s switch back to our &lt;code&gt;twitter-wrapper-test.cr&lt;&#x2F;code&gt; file and replace the &lt;code&gt;puts ...&lt;&#x2F;code&gt; line with the following:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;ruby&quot; class=&quot;language-ruby z-code&quot;&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;tweets &lt;span class=&quot;z-keyword z-operator z-assignment z-ruby&quot;&gt;=&lt;&#x2F;span&gt; client&lt;span class=&quot;z-punctuation z-accessor z-dot z-ruby&quot;&gt;.&lt;&#x2F;span&gt;tweet_search&lt;span class=&quot;z-punctuation z-definition z-group z-begin z-ruby&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-ruby&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;@crystal-lang&lt;span class=&quot;z-punctuation z-definition z-string z-end z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-group z-end z-ruby&quot;&gt;)&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;tweets&lt;span class=&quot;z-punctuation z-accessor z-dot z-ruby&quot;&gt;.&lt;&#x2F;span&gt;each &lt;span class=&quot;z-keyword z-control z-start-block z-ruby&quot;&gt;do&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-block z-parameters z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameters z-begin z-ruby&quot;&gt;|&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-parameters z-ruby&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-ruby&quot;&gt;tweet&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-block z-parameters z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameters z-end z-ruby&quot;&gt;|&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;  &lt;span class=&quot;z-support z-function z-builtin z-ruby&quot;&gt;puts&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-string z-ruby&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-interpolation z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-interpolation z-begin z-ruby&quot;&gt;#{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-interpolation z-ruby&quot;&gt;&lt;span class=&quot;z-source z-ruby z-embedded z-ruby&quot;&gt;tweet&lt;span class=&quot;z-punctuation z-accessor z-dot z-ruby&quot;&gt;.&lt;&#x2F;span&gt;user&lt;span class=&quot;z-punctuation z-accessor z-dot z-ruby&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-builtin z-ruby&quot;&gt;name&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-interpolation z-end z-ruby&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-ruby&quot;&gt; - &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-interpolation z-ruby&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-interpolation z-begin z-ruby&quot;&gt;#{&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-interpolation z-ruby&quot;&gt;&lt;span class=&quot;z-source z-ruby z-embedded z-ruby&quot;&gt;tweet&lt;span class=&quot;z-punctuation z-accessor z-dot z-ruby&quot;&gt;.&lt;&#x2F;span&gt;text&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-interpolation z-end z-ruby&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-ruby&quot;&gt; &lt;span class=&quot;z-constant z-character z-escape z-ruby&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-character z-escape z-ruby&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-ruby&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-ruby&quot;&gt;&lt;span class=&quot;z-keyword z-control z-ruby&quot;&gt;end&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And run &lt;code&gt;crystal src&#x2F;twitter-wrapper-test.cr&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;We should get this!&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;GaryAsh1969 - @burgerbecky i’ve been tracking this https:&#x2F;&#x2F;t.co&#x2F;dMAPThdMuH since using Ruby 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;ysbaddaden - I uploaded the long overdue FreeBSD tarballs for Crystal 0.19.0 up to 0.19.2 https:&#x2F;&#x2F;t.co&#x2F;vTACMU98Mv 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;piedoomy - RT @CrystalLanguage: Fund Crystal and help it become production-ready! https:&#x2F;&#x2F;t.co&#x2F;AeBEGvw2TW 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;MattStudies - Great post from the Crystal Team https:&#x2F;&#x2F;t.co&#x2F;OgczM0lcEN 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Benchmarks are so frustratingly hard. 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;versiontracker - Crystal 0.19.2 released. https:&#x2F;&#x2F;t.co&#x2F;4NXtqAh1Lc #compiler #ruby #developers #programming_language #c https:&#x2F;&#x2F;t.co&#x2F;OrZxr8Rxwv 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Cool.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;for-the-future-conclusion&quot;&gt;For the future &amp;amp; Conclusion&lt;&#x2F;h3&gt;
&lt;p&gt;This is a very simple wrapper, and it doesn&#x27;t implement everything Twitter has to offer.  Feel free to fully implement your client and push it to GitHub as a shard!&lt;&#x2F;p&gt;
&lt;p&gt;Crystal is constantly changing, so if you notice an issue with any of this code, please let me know so I can update it.  I am also just learning Crystal, so if you have an idea on how to do something better, please let me know.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;donate&quot;&gt;Donate&lt;&#x2F;h3&gt;
&lt;p&gt;In lieu of donating to me, please consider funding Crystal on Bountysource so they can become production ready!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.bountysource.com&#x2F;teams&#x2F;crystal-lang&#x2F;fundraisers&#x2F;702-crystal-language&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;api.bountysource.com&#x2F;badge&#x2F;team?team_id=89730&amp;amp;style=raised&quot; alt=&quot;Bountysource&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Also, have my this Crystal Cat I made.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;doomy.org&#x2F;building-an-authenticated-web-api-wrapper-with-crystal&#x2F;crystalcat-02.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
